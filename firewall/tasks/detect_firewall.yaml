---
#Проверка активного файрвола 

- name: Check firewalld service status
  systemd_service: 
    name: firewalld
  ignore_errors: true 
  register: firewalld_status

- name: Check ufw service status
  systemd_service:
    name: ufw
  ignore_errors: True
  register: ufw_status

- name: Set firewall_type fact # Устанавливаем факт на основе статуса служб 
  set_fact:
    firewall_type: >-
      {% if firewalld_status.status.ActiveState is defined and firewalld_status.status.ActiveState == 'active' -%}
        {{- 'firewalld' | trim -}}
      {% elif ufw_status.status.ActiveState is defined and ufw_status.ActiveState == 'active' -%}
        {{- 'ufw' | trim -}}
      {% else -%}
        {{- firewall_default_if_none | trim -}} 
      {% endif -%}

- name: Debug detected firewall type 
  debug:
    msg: "Detected firewall type: {{ firewall_type }}"

#Если установлен тип по умполчанию не none, проверяем, имеется ли такой пакет в системе. 
- name: Ensure default firewall package is installed if none active 
  package:
    name: "{{ firewall_type }}"
    state: present
  when: 
    - firewall_type != 'none'
    - firewalld_status.status.ActiveState is not defined or firewalld_status.status.ActiveState != 'active'
    - ufw_status.status.ActiveState is not defined or firewalld_status.status.ActiveState != 'active'

# Если firewalld был установлен по умолчанию и не был активен, запускаем его 
- name: Start and enable firewalld if set as default and not active 
  systemd_service: 
    name: firewalld 
    state: started
    enabled: True
  when:
    - firewall_type == 'firewalld'
    - firewalld_status.status.ActiveState is not defined or firewalld_status.status.ActiveState != 'active'

# Если ufw был установлен по умолчанию и не был активен, запускаем его. 
- name: Enable ufw if set as default and not active
  ufw:
    state: enabled 
  when: 
    - firewall_type == 'ufw'
    - ufw_status.status.ActiveState is not defined or ufw_status.status.ActiveState != 'active'